{
  "openapi": "3.0.4",
  "info": {
    "title": "OData Service for namespace Microsoft.NAV",
    "description": "This OData service is located at http://localhost",
    "version": "1.0.0",
    "x-ms-generated-by": {
      "toolName": "Microsoft.OpenApi.OData",
      "toolVersion": "1.0.9.0"
    }
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {
    "/accounts": {
      "description": "Provides operations to manage the collection of account entities.",
      "get": {
        "tags": [
          "accounts.account"
        ],
        "summary": "Get entities from accounts",
        "operationId": "accounts.account.ListAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.accountCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/accounts({auxiliaryIndex1})": {
      "description": "Provides operations to manage the collection of account entities.",
      "get": {
        "tags": [
          "accounts.account"
        ],
        "summary": "Get entity from accounts by key",
        "operationId": "accounts.account.GetAccount",
        "parameters": [
          {
            "name": "auxiliaryIndex1",
            "in": "path",
            "description": "The unique identifier of account",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "account"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.account"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/accounts/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "accounts.account"
        ],
        "summary": "Get the number of the resource",
        "operationId": "accounts.GetCount-4219",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/apicategoryroutes": {
      "description": "Provides operations to manage the collection of apicategoryroutes entities.",
      "get": {
        "tags": [
          "apicategoryroutes.apicategoryroutes"
        ],
        "summary": "Get entities from apicategoryroutes",
        "operationId": "apicategoryroutes.apicategoryroutes.ListApicategoryroutes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.apicategoryroutesCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/apicategoryroutes({route})": {
      "description": "Provides operations to manage the collection of apicategoryroutes entities.",
      "get": {
        "tags": [
          "apicategoryroutes.apicategoryroutes"
        ],
        "summary": "Get entity from apicategoryroutes by key",
        "operationId": "apicategoryroutes.apicategoryroutes.GetApicategoryroutes",
        "parameters": [
          {
            "name": "route",
            "in": "path",
            "description": "The unique identifier of apicategoryroutes",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "apicategoryroutes"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.apicategoryroutes"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/apicategoryroutes/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "apicategoryroutes.apicategoryroutes"
        ],
        "summary": "Get the number of the resource",
        "operationId": "apicategoryroutes.GetCount-8bb4",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/companies": {
      "description": "Provides operations to manage the collection of company entities.",
      "get": {
        "tags": [
          "companies.company"
        ],
        "summary": "Get entities from companies",
        "operationId": "companies.company.ListCompany",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.companyCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/companies({id})": {
      "description": "Provides operations to manage the collection of company entities.",
      "get": {
        "tags": [
          "companies.company"
        ],
        "summary": "Get entity from companies by key",
        "operationId": "companies.company.GetCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.company"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/accounts": {
      "description": "Provides operations to manage the accounts property of the Microsoft.NAV.company entity.",
      "get": {
        "tags": [
          "companies.account"
        ],
        "summary": "Get accounts from companies",
        "operationId": "companies.ListAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.accountCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/accounts({auxiliaryIndex1})": {
      "description": "Provides operations to manage the accounts property of the Microsoft.NAV.company entity.",
      "get": {
        "tags": [
          "companies.account"
        ],
        "summary": "Get accounts from companies",
        "operationId": "companies.GetAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "auxiliaryIndex1",
            "in": "path",
            "description": "The unique identifier of account",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "account"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.account"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/accounts/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "companies.account"
        ],
        "summary": "Get the number of the resource",
        "operationId": "companies.accounts.GetCount-26d0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/companies({id})/entitlements": {
      "description": "Provides operations to manage the entitlements property of the Microsoft.NAV.company entity.",
      "get": {
        "tags": [
          "companies.entitlement"
        ],
        "summary": "Get entitlements from companies",
        "operationId": "companies.ListEntitlements",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.entitlementCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/entitlements({auxiliaryIndex1})": {
      "description": "Provides operations to manage the entitlements property of the Microsoft.NAV.company entity.",
      "get": {
        "tags": [
          "companies.entitlement"
        ],
        "summary": "Get entitlements from companies",
        "operationId": "companies.GetEntitlements",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "auxiliaryIndex1",
            "in": "path",
            "description": "The unique identifier of entitlement",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "entitlement"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.entitlement"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/entitlements/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "companies.entitlement"
        ],
        "summary": "Get the number of the resource",
        "operationId": "companies.entitlements.GetCount-94d3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/companies({id})/transactions": {
      "description": "Provides operations to manage the transactions property of the Microsoft.NAV.company entity.",
      "get": {
        "tags": [
          "companies.transaction"
        ],
        "summary": "Get transactions from companies",
        "operationId": "companies.ListTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.transactionCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/transactions({auxiliaryIndex1})": {
      "description": "Provides operations to manage the transactions property of the Microsoft.NAV.company entity.",
      "get": {
        "tags": [
          "companies.transaction"
        ],
        "summary": "Get transactions from companies",
        "operationId": "companies.GetTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "auxiliaryIndex1",
            "in": "path",
            "description": "The unique identifier of transaction",
            "required": true,
            "schema": {
              "type": "number",
              "format": "int64"
            },
            "x-ms-docs-key-type": "transaction"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.transaction"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/transactions/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "companies.transaction"
        ],
        "summary": "Get the number of the resource",
        "operationId": "companies.transactions.GetCount-a6d1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/companies/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "companies.company"
        ],
        "summary": "Get the number of the resource",
        "operationId": "companies.GetCount-5813",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/entitlements": {
      "description": "Provides operations to manage the collection of entitlement entities.",
      "get": {
        "tags": [
          "entitlements.entitlement"
        ],
        "summary": "Get entities from entitlements",
        "operationId": "entitlements.entitlement.ListEntitlement",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.entitlementCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/entitlements({auxiliaryIndex1})": {
      "description": "Provides operations to manage the collection of entitlement entities.",
      "get": {
        "tags": [
          "entitlements.entitlement"
        ],
        "summary": "Get entity from entitlements by key",
        "operationId": "entitlements.entitlement.GetEntitlement",
        "parameters": [
          {
            "name": "auxiliaryIndex1",
            "in": "path",
            "description": "The unique identifier of entitlement",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "entitlement"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.entitlement"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/entitlements/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "entitlements.entitlement"
        ],
        "summary": "Get the number of the resource",
        "operationId": "entitlements.GetCount-abd8",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/entityDefinitions": {
      "description": "Provides operations to manage the collection of entityMetadata entities.",
      "get": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Get entities from entityDefinitions",
        "operationId": "entityDefinitions.entityMetadata.ListEntityMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.entityMetadataCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/entityDefinitions({entityName})": {
      "description": "Provides operations to manage the collection of entityMetadata entities.",
      "get": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Get entity from entityDefinitions by key",
        "operationId": "entityDefinitions.entityMetadata.GetEntityMetadata",
        "parameters": [
          {
            "name": "entityName",
            "in": "path",
            "description": "The unique identifier of entityMetadata",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "entityMetadata"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/entityDefinitions/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Get the number of the resource",
        "operationId": "entityDefinitions.GetCount-7d89",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/externalbusinesseventdefinitions": {
      "description": "Provides operations to manage the collection of externalbusinesseventdefinitions entities.",
      "get": {
        "tags": [
          "externalbusinesseventdefinitions.externalbusinesseventdefinitions"
        ],
        "summary": "Get entities from externalbusinesseventdefinitions",
        "operationId": "externalbusinesseventdefinitions.externalbusinesseventdefinitions.ListExternalbusinesseventdefinitions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.externalbusinesseventdefinitionsCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/externalbusinesseventdefinitions(appId={appId},name={name},eventVersion={eventVersion})": {
      "description": "Provides operations to manage the collection of externalbusinesseventdefinitions entities.",
      "get": {
        "tags": [
          "externalbusinesseventdefinitions.externalbusinesseventdefinitions"
        ],
        "summary": "Get entity from externalbusinesseventdefinitions by key",
        "operationId": "externalbusinesseventdefinitions.externalbusinesseventdefinitions.GetExternalbusinesseventdefinitions",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "Property in multi-part unique identifier of externalbusinesseventdefinitions",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "externalbusinesseventdefinitions"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Property in multi-part unique identifier of externalbusinesseventdefinitions",
            "required": true,
            "schema": {
              "maxLength": 80,
              "type": "string"
            },
            "x-ms-docs-key-type": "externalbusinesseventdefinitions"
          },
          {
            "name": "eventVersion",
            "in": "path",
            "description": "Property in multi-part unique identifier of externalbusinesseventdefinitions",
            "required": true,
            "schema": {
              "maxLength": 43,
              "type": "string"
            },
            "x-ms-docs-key-type": "externalbusinesseventdefinitions"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.externalbusinesseventdefinitions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/externalbusinesseventdefinitions/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "externalbusinesseventdefinitions.externalbusinesseventdefinitions"
        ],
        "summary": "Get the number of the resource",
        "operationId": "externalbusinesseventdefinitions.GetCount-e7e3",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/externaleventsubscriptions": {
      "description": "Provides operations to manage the collection of externaleventsubscriptions entities.",
      "get": {
        "tags": [
          "externaleventsubscriptions.externaleventsubscriptions"
        ],
        "summary": "Get entities from externaleventsubscriptions",
        "operationId": "externaleventsubscriptions.externaleventsubscriptions.ListExternaleventsubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.externaleventsubscriptionsCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "externaleventsubscriptions.externaleventsubscriptions"
        ],
        "summary": "Add new entity to externaleventsubscriptions",
        "operationId": "externaleventsubscriptions.externaleventsubscriptions.CreateExternaleventsubscriptions",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.externaleventsubscriptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.externaleventsubscriptions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/externaleventsubscriptions({id})": {
      "description": "Provides operations to manage the collection of externaleventsubscriptions entities.",
      "get": {
        "tags": [
          "externaleventsubscriptions.externaleventsubscriptions"
        ],
        "summary": "Get entity from externaleventsubscriptions by key",
        "operationId": "externaleventsubscriptions.externaleventsubscriptions.GetExternaleventsubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of externaleventsubscriptions",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "externaleventsubscriptions"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.externaleventsubscriptions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "externaleventsubscriptions.externaleventsubscriptions"
        ],
        "summary": "Update entity in externaleventsubscriptions",
        "operationId": "externaleventsubscriptions.externaleventsubscriptions.UpdateExternaleventsubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of externaleventsubscriptions",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "externaleventsubscriptions"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.externaleventsubscriptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "externaleventsubscriptions.externaleventsubscriptions"
        ],
        "summary": "Delete entity from externaleventsubscriptions",
        "operationId": "externaleventsubscriptions.externaleventsubscriptions.DeleteExternaleventsubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of externaleventsubscriptions",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "externaleventsubscriptions"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/externaleventsubscriptions/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "externaleventsubscriptions.externaleventsubscriptions"
        ],
        "summary": "Get the number of the resource",
        "operationId": "externaleventsubscriptions.GetCount-8377",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subscriptions": {
      "description": "Provides operations to manage the collection of subscriptions entities.",
      "get": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "subscriptions.subscriptions.ListSubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.subscriptionsCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "subscriptions.subscriptions.CreateSubscriptions",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions({subscriptionId})": {
      "description": "Provides operations to manage the collection of subscriptions entities.",
      "get": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "subscriptions.subscriptions.GetSubscriptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The unique identifier of subscriptions",
            "required": true,
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-ms-docs-key-type": "subscriptions"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "subscriptions.subscriptions.UpdateSubscriptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The unique identifier of subscriptions",
            "required": true,
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-ms-docs-key-type": "subscriptions"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "subscriptions.subscriptions.DeleteSubscriptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The unique identifier of subscriptions",
            "required": true,
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-ms-docs-key-type": "subscriptions"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Get the number of the resource",
        "operationId": "subscriptions.GetCount-8aee",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transactions": {
      "description": "Provides operations to manage the collection of transaction entities.",
      "get": {
        "tags": [
          "transactions.transaction"
        ],
        "summary": "Get entities from transactions",
        "operationId": "transactions.transaction.ListTransaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Microsoft.NAV.transactionCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transactions({auxiliaryIndex1})": {
      "description": "Provides operations to manage the collection of transaction entities.",
      "get": {
        "tags": [
          "transactions.transaction"
        ],
        "summary": "Get entity from transactions by key",
        "operationId": "transactions.transaction.GetTransaction",
        "parameters": [
          {
            "name": "auxiliaryIndex1",
            "in": "path",
            "description": "The unique identifier of transaction",
            "required": true,
            "schema": {
              "type": "number",
              "format": "int64"
            },
            "x-ms-docs-key-type": "transaction"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.transaction"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/transactions/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "transactions.transaction"
        ],
        "summary": "Get the number of the resource",
        "operationId": "transactions.GetCount-6fc6",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.NAV.entityMetadata": {
        "title": "entityMetadata",
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string"
          },
          "entitySetName": {
            "type": "string",
            "nullable": true
          },
          "entityCaptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
            }
          },
          "entitySetCaptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataField"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataAction"
            }
          },
          "enumMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataEnumMember"
            }
          }
        },
        "example": {
          "entityName": "string (identifier)",
          "entitySetName": "string",
          "entityCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "entitySetCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "properties": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataField"
            }
          ],
          "actions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataAction"
            }
          ],
          "enumMembers": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataEnumMember"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataLabel": {
        "title": "entityMetadataLabel",
        "type": "object",
        "properties": {
          "languageCode": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "number",
            "format": "int32"
          },
          "caption": {
            "type": "string"
          }
        },
        "example": {
          "languageCode": "number",
          "caption": "string"
        }
      },
      "Microsoft.NAV.entityMetadataField": {
        "title": "entityMetadataField",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "captions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
            }
          }
        },
        "example": {
          "name": "string",
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataAction": {
        "title": "entityMetadataAction",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "captions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
            }
          }
        },
        "example": {
          "name": "string",
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataEnumMember": {
        "title": "entityMetadataEnumMember",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "number",
            "format": "int32"
          },
          "captions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
            }
          }
        },
        "example": {
          "name": "string",
          "value": "number",
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ]
        }
      },
      "Microsoft.NAV.company": {
        "title": "company",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "systemVersion": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "number",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "businessProfileId": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "systemCreatedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "systemModifiedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemModifiedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entitlement"
            },
            "x-ms-navigationProperty": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.transaction"
            },
            "x-ms-navigationProperty": true
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.account"
            },
            "x-ms-navigationProperty": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "systemVersion": "string",
          "timestamp": "number",
          "name": "string",
          "displayName": "string",
          "businessProfileId": "string",
          "systemCreatedAt": "string (timestamp)",
          "systemCreatedBy": "string",
          "systemModifiedAt": "string (timestamp)",
          "systemModifiedBy": "string",
          "entitlements": [
            {
              "@odata.type": "Microsoft.NAV.entitlement"
            }
          ],
          "transactions": [
            {
              "@odata.type": "Microsoft.NAV.transaction"
            }
          ],
          "accounts": [
            {
              "@odata.type": "Microsoft.NAV.account"
            }
          ]
        }
      },
      "Microsoft.NAV.subscriptions": {
        "title": "subscriptions",
        "type": "object",
        "properties": {
          "subscriptionId": {
            "maxLength": 150,
            "type": "string"
          },
          "notificationUrl": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "timestamp": {
            "type": "number",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clientState": {
            "maxLength": 2048,
            "type": "string",
            "nullable": true
          },
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "systemModifiedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemModifiedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "subscriptionId": "string (identifier)",
          "notificationUrl": "string",
          "resource": "string",
          "timestamp": "number",
          "userId": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "clientState": "string",
          "expirationDateTime": "string (timestamp)",
          "systemCreatedAt": "string (timestamp)",
          "systemCreatedBy": "string",
          "systemModifiedAt": "string (timestamp)",
          "systemModifiedBy": "string"
        }
      },
      "Microsoft.NAV.externaleventsubscriptions": {
        "title": "externaleventsubscriptions",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "timestamp": {
            "type": "number",
            "format": "int64",
            "nullable": true
          },
          "appId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "eventName": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "userId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "notificationUrl": {
            "maxLength": 2048,
            "type": "string",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clientState": {
            "maxLength": 2048,
            "type": "string",
            "nullable": true
          },
          "subscriptionType": {
            "type": "string",
            "nullable": true
          },
          "eventVersion": {
            "maxLength": 43,
            "type": "string",
            "nullable": true
          },
          "subscriptionState": {
            "type": "string",
            "nullable": true
          },
          "systemCreatedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "systemModifiedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemModifiedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "companyId": "string",
          "timestamp": "number",
          "appId": "string",
          "eventName": "string",
          "companyName": "string",
          "userId": "string",
          "notificationUrl": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "clientState": "string",
          "subscriptionType": "string",
          "eventVersion": "string",
          "subscriptionState": "string",
          "systemCreatedAt": "string (timestamp)",
          "systemCreatedBy": "string",
          "systemModifiedAt": "string (timestamp)",
          "systemModifiedBy": "string"
        }
      },
      "Microsoft.NAV.externalbusinesseventdefinitions": {
        "title": "externalbusinesseventdefinitions",
        "type": "object",
        "properties": {
          "appId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 80,
            "type": "string"
          },
          "eventVersion": {
            "maxLength": 43,
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "displayName": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "appName": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "appPublisher": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "appVersion": {
            "maxLength": 43,
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "appId": "string (identifier)",
          "name": "string (identifier)",
          "eventVersion": "string (identifier)",
          "payload": "string",
          "displayName": "string",
          "description": "string",
          "category": "string",
          "appName": "string",
          "appPublisher": "string",
          "appVersion": "string"
        }
      },
      "Microsoft.NAV.apicategoryroutes": {
        "title": "apicategoryroutes",
        "type": "object",
        "properties": {
          "route": {
            "type": "string"
          },
          "publisher": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "group": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "route": "string (identifier)",
          "publisher": "string",
          "group": "string",
          "version": "string"
        }
      },
      "Microsoft.NAV.entitlement": {
        "title": "entitlement",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "iban": {
            "maxLength": 37,
            "type": "string",
            "nullable": true
          },
          "bic": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "availableBalance": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accountHolderName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "auxiliaryIndex1": {
            "maxLength": 20,
            "type": "string"
          }
        },
        "example": {
          "id": "string",
          "iban": "string",
          "bic": "string",
          "currencyCode": "string",
          "availableBalance": "number",
          "currentBalance": "number",
          "accountHolderName": "string",
          "createdAt": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "auxiliaryIndex1": "string (identifier)"
        }
      },
      "Microsoft.NAV.transaction": {
        "title": "transaction",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "bookingDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "valueDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currencyCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "counterPartyIban": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "counterPartyName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "mandateReference": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "auxiliaryIndex1": {
            "type": "number",
            "format": "int64"
          }
        },
        "example": {
          "id": "string",
          "bookingDate": "string (timestamp)",
          "valueDate": "string (timestamp)",
          "amount": "number",
          "currencyCode": "string",
          "counterPartyIban": "string",
          "counterPartyName": "string",
          "mandateReference": "string",
          "createdAt": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "auxiliaryIndex1": "number (identifier)"
        }
      },
      "Microsoft.NAV.account": {
        "title": "account",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "iban": {
            "maxLength": 37,
            "type": "string",
            "nullable": true
          },
          "bic": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "availableBalance": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accountHolderName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "auxiliaryIndex1": {
            "maxLength": 20,
            "type": "string"
          }
        },
        "example": {
          "id": "string",
          "iban": "string",
          "bic": "string",
          "currencyCode": "string",
          "availableBalance": "number",
          "currentBalance": "number",
          "accountHolderName": "string",
          "createdAt": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "auxiliaryIndex1": "string (identifier)"
        }
      },
      "Microsoft.NAV.ODataErrors.ODataError": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Microsoft.NAV.ODataErrors.MainError"
          }
        }
      },
      "Microsoft.NAV.ODataErrors.MainError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "x-ms-primary-error-message": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.ODataErrors.ErrorDetails"
            }
          },
          "innerError": {
            "$ref": "#/components/schemas/Microsoft.NAV.ODataErrors.InnerError"
          }
        }
      },
      "Microsoft.NAV.ODataErrors.ErrorDetails": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.NAV.ODataErrors.InnerError": {
        "type": "object",
        "description": "The structure of this object is service-specific"
      },
      "ODataCountResponse": {
        "type": "integer",
        "format": "int32"
      },
      "Microsoft.NAV.entityMetadataCollectionResponse": {
        "title": "Collection of entityMetadata",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
            }
          }
        }
      },
      "Microsoft.NAV.companyCollectionResponse": {
        "title": "Collection of company",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.company"
            }
          }
        }
      },
      "Microsoft.NAV.subscriptionsCollectionResponse": {
        "title": "Collection of subscriptions",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
            }
          }
        }
      },
      "Microsoft.NAV.externaleventsubscriptionsCollectionResponse": {
        "title": "Collection of externaleventsubscriptions",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.externaleventsubscriptions"
            }
          }
        }
      },
      "Microsoft.NAV.externalbusinesseventdefinitionsCollectionResponse": {
        "title": "Collection of externalbusinesseventdefinitions",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.externalbusinesseventdefinitions"
            }
          }
        }
      },
      "Microsoft.NAV.apicategoryroutesCollectionResponse": {
        "title": "Collection of apicategoryroutes",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.apicategoryroutes"
            }
          }
        }
      },
      "Microsoft.NAV.entitlementCollectionResponse": {
        "title": "Collection of entitlement",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entitlement"
            }
          }
        }
      },
      "Microsoft.NAV.transactionCollectionResponse": {
        "title": "Collection of transaction",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.transaction"
            }
          }
        }
      },
      "Microsoft.NAV.accountCollectionResponse": {
        "title": "Collection of account",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.account"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataLabelCollectionResponse": {
        "title": "Collection of Microsoft.NAV.entityMetadataLabel",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataFieldCollectionResponse": {
        "title": "Collection of Microsoft.NAV.entityMetadataField",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataField"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataActionCollectionResponse": {
        "title": "Collection of Microsoft.NAV.entityMetadataAction",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataAction"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataEnumMemberCollectionResponse": {
        "title": "Collection of Microsoft.NAV.entityMetadataEnumMember",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataEnumMember"
            }
          }
        }
      },
      "ReferenceUpdate": {
        "type": "object",
        "properties": {
          "@odata.id": {
            "type": "string"
          },
          "@odata.type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferenceCreate": {
        "type": "object",
        "properties": {
          "@odata.id": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ReferenceNumeric": {
        "enum": [
          "-INF",
          "INF",
          "NaN"
        ],
        "type": "string",
        "nullable": true
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.ODataErrors.ODataError"
            }
          }
        }
      },
      "ODataCountResponse": {
        "description": "The count of the resource",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/ODataCountResponse"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.companyCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.companyCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.subscriptionsCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.subscriptionsCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.externaleventsubscriptionsCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.externaleventsubscriptionsCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.externalbusinesseventdefinitionsCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.externalbusinesseventdefinitionsCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.apicategoryroutesCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.apicategoryroutesCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.entitlementCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.entitlementCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.transactionCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.transactionCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.accountCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.accountCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataLabelCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabelCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataFieldCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataFieldCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataActionCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataActionCollectionResponse"
            }
          }
        }
      },
      "Microsoft.NAV.entityMetadataEnumMemberCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataEnumMemberCollectionResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "Microsoft.NAV.entityMetadata": {
        "value": {
          "actions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataAction"
            }
          ],
          "entityCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "entityName": "String (identifier)",
          "entitySetCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "entitySetName": "String",
          "enumMembers": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataEnumMember"
            }
          ],
          "properties": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataField"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataLabel": {
        "value": {
          "caption": "String",
          "languageCode": 0
        }
      },
      "Microsoft.NAV.entityMetadataField": {
        "value": {
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "name": "String"
        }
      },
      "Microsoft.NAV.entityMetadataAction": {
        "value": {
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "name": "String"
        }
      },
      "Microsoft.NAV.entityMetadataEnumMember": {
        "value": {
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "name": "String",
          "value": 0
        }
      },
      "Microsoft.NAV.company": {
        "value": {
          "accounts": [
            {
              "@odata.type": "Microsoft.NAV.account"
            }
          ],
          "businessProfileId": "String",
          "displayName": "String",
          "entitlements": [
            {
              "@odata.type": "Microsoft.NAV.entitlement"
            }
          ],
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "name": "String",
          "systemCreatedAt": "0001-01-01T01:24:00+01:24",
          "systemCreatedBy": "00000000-0000-0000-0000-000000000000",
          "systemModifiedAt": "0001-01-01T01:24:00+01:24",
          "systemModifiedBy": "00000000-0000-0000-0000-000000000000",
          "systemVersion": "String",
          "timestamp": 0,
          "transactions": [
            {
              "@odata.type": "Microsoft.NAV.transaction"
            }
          ]
        }
      },
      "Microsoft.NAV.subscriptions": {
        "value": {
          "clientState": "String",
          "expirationDateTime": "0001-01-01T01:24:00+01:24",
          "lastModifiedDateTime": "0001-01-01T01:24:00+01:24",
          "notificationUrl": "String",
          "resource": "String",
          "subscriptionId": "String (identifier)",
          "systemCreatedAt": "0001-01-01T01:24:00+01:24",
          "systemCreatedBy": "00000000-0000-0000-0000-000000000000",
          "systemModifiedAt": "0001-01-01T01:24:00+01:24",
          "systemModifiedBy": "00000000-0000-0000-0000-000000000000",
          "timestamp": 0,
          "userId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "Microsoft.NAV.externaleventsubscriptions": {
        "value": {
          "appId": "00000000-0000-0000-0000-000000000000",
          "clientState": "String",
          "companyId": "00000000-0000-0000-0000-000000000000",
          "companyName": "String",
          "eventName": "String",
          "eventVersion": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "lastModifiedDateTime": "0001-01-01T01:24:00+01:24",
          "notificationUrl": "String",
          "subscriptionState": "String",
          "subscriptionType": "String",
          "systemCreatedAt": "0001-01-01T01:24:00+01:24",
          "systemCreatedBy": "00000000-0000-0000-0000-000000000000",
          "systemModifiedAt": "0001-01-01T01:24:00+01:24",
          "systemModifiedBy": "00000000-0000-0000-0000-000000000000",
          "timestamp": 0,
          "userId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "Microsoft.NAV.externalbusinesseventdefinitions": {
        "value": {
          "appId": "00000000-0000-0000-0000-000000000000 (identifier)",
          "appName": "String",
          "appPublisher": "String",
          "appVersion": "String",
          "category": "String",
          "description": "String",
          "displayName": "String",
          "eventVersion": "String (identifier)",
          "name": "String (identifier)",
          "payload": "String"
        }
      },
      "Microsoft.NAV.apicategoryroutes": {
        "value": {
          "group": "String",
          "publisher": "String",
          "route": "String (identifier)",
          "version": "String"
        }
      },
      "Microsoft.NAV.entitlement": {
        "value": {
          "accountHolderName": "String",
          "auxiliaryIndex1": "String (identifier)",
          "availableBalance": 0,
          "bic": "String",
          "createdAt": "0001-01-01T01:24:00+01:24",
          "currencyCode": "String",
          "currentBalance": 0,
          "iban": "String",
          "id": "00000000-0000-0000-0000-000000000000",
          "lastModifiedDateTime": "0001-01-01T01:24:00+01:24"
        }
      },
      "Microsoft.NAV.transaction": {
        "value": {
          "amount": 0,
          "auxiliaryIndex1": 0,
          "bookingDate": "0001-01-01",
          "counterPartyIban": "String",
          "counterPartyName": "String",
          "createdAt": "0001-01-01T01:24:00+01:24",
          "currencyCode": "String",
          "id": "00000000-0000-0000-0000-000000000000",
          "lastModifiedDateTime": "0001-01-01T01:24:00+01:24",
          "mandateReference": "String",
          "valueDate": "0001-01-01"
        }
      },
      "Microsoft.NAV.account": {
        "value": {
          "accountHolderName": "String",
          "auxiliaryIndex1": "String (identifier)",
          "availableBalance": 0,
          "bic": "String",
          "createdAt": "0001-01-01T01:24:00+01:24",
          "currencyCode": "String",
          "currentBalance": 0,
          "iban": "String",
          "id": "00000000-0000-0000-0000-000000000000",
          "lastModifiedDateTime": "0001-01-01T01:24:00+01:24"
        }
      }
    },
    "requestBodies": {
      "refPostBody": {
        "description": "New navigation property ref value",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceCreate"
            }
          }
        },
        "required": true
      },
      "refPutBody": {
        "description": "New navigation property ref values",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceUpdate"
            }
          }
        },
        "required": true
      }
    }
  },
  "tags": [
    {
      "name": "accounts.account",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "apicategoryroutes.apicategoryroutes",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.company",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.account",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.entitlement",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.transaction",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "entitlements.entitlement",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "entityDefinitions.entityMetadata",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "externalbusinesseventdefinitions.externalbusinesseventdefinitions",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "externaleventsubscriptions.externaleventsubscriptions",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscriptions.subscriptions",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "transactions.transaction",
      "x-ms-docs-toc-type": "page"
    }
  ]
}
